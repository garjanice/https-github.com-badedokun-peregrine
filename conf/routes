# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Login page
GET		/login 							com.depth1.grc.controllers.ApplicationLogin.login()
POST	/authenticate 					com.depth1.grc.controllers.ApplicationLogin.authenticate()

# Home page
GET     /                          		com.depth1.grc.controllers.Application.index()

GET     /riskAssessment                 com.depth1.grc.controllers.Application.showFrontRAPage()

GET 	/riskAssessment/create			com.depth1.grc.controllers.Application.showCreateRAPage()

GET 	/riskAssessment/view			com.depth1.grc.controllers.Application.showViewRAPage()

GET 	/riskAssessment/update			com.depth1.grc.controllers.Application.showUpdateRAPage()

DELETE	/riskAssessment/delete			com.depth1.grc.controllers.Application.deleteRiskAssessment()

POST 	/riskAssessment/selected		com.depth1.grc.controllers.Application.setSelectedRA()

POST  	/riskAssessment/create/done		com.depth1.grc.controllers.Application.addRiskAssessment()

GET     /policy                	    	com.depth1.grc.controllers.Application.showPolicyListPage()

GET		/policy/create				   	com.depth1.grc.controllers.Application.showCreatePolicyPage()

GET		/policy/createBody				com.depth1.grc.controllers.Application.showCreatePolicyEditorPage()

GET		/policy/view					com.depth1.grc.controllers.Application.showViewPolicyPage()

GET		/policy/update/:id				com.depth1.grc.controllers.Application.showUpdatePolicyPage(id:java.util.UUID)

GET		/policy/delete					com.depth1.grc.controllers.Application.showDeletePolicyPage()

GET 	/policy/restore					com.depth1.grc.controllers.Application.showRestorePolicyPage()

GET 	/policy/restore/done			com.depth1.grc.controllers.Application.restorePolicy(policyId: String)

GET		/policy/delete/done				com.depth1.grc.controllers.Application.deletePolicy(policyId: String)

POST  	/policy/create/done				com.depth1.grc.controllers.Application.createPolicy()

POST  	/policy/update/done				com.depth1.grc.controllers.Application.updatePolicy()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
